{
    "id":"c189f724-60a7-484e-9422-abb394407f92",
    "schema":"https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created":"2019-06-07T01:07:32.100017Z",
    "inputs":[
        {
            "name":"input dataset"
        }
    ],
    "outputs":[
        {
            "data":"steps.15.produce",
            "name":"predictions of input dataset"
        }
    ],
    "steps":[
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version":"0.2.0",
                "python_path":"d3m.primitives.data_transformation.denormalize.Common",
                "name":"Denormalize datasets",
                "digest":"948abcebe21aa6765ecc8caf73c314058a623be2665cf69eb57c7d7662db23c7"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"inputs.0"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "starting_resource":{
                    "type":"VALUE",
                    "data":null
                },
                "recursive":{
                    "type":"VALUE",
                    "data":true
                },
                "many_to_many":{
                    "type":"VALUE",
                    "data":false
                },
                "discard_not_joined_tabular_resources":{
                    "type":"VALUE",
                    "data":false
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"wikidata-wikifier",
                "version":"1.5.1",
                "python_path":"d3m.primitives.data_augmentation.wikifier.DSBOX",
                "name":"wikidata wikifier",
                "digest":"450befee18d12869bdc3eff9ab8f5a7a0a013979ec1e16552bf8999c31a07ec3"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.0.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "use_columns":{
                    "type":"VALUE",
                    "data":[]
                },
                "exclude_columns":{
                    "type":"VALUE",
                    "data":[]
                },
                "specific_q_nodes":{
                    "type":"VALUE",
                    "data":{
                        "encoding":"pickle",
                        "value":"gANdcQAu"
                    }
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"fe0f1ac8-1d39-463a-b344-7bd498a31b91",
                "version":"0.1",
                "python_path":"d3m.primitives.data_augmentation.datamart_augment.Common",
                "name":"Perform augmentation using Datamart",
                "digest":"1e8095ddbb0dc62e697cdbef430fe59b121cbca394c2e529ec647ceee742e603"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.1.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "search_result":{
                    "type":"VALUE",
                    "data":{
                        "encoding":"pickle",
                        "value":"gANCWAEAAIADY2RhdGFtYXJ0X2lzaS5lbnRyaWVzCkRhdGFtYXJ0U2VhcmNoUmVzdWx0CnEAKYFxAX1xAihYDQAAAHNlYXJjaF9yZXN1bHRxA31xBChYDgAAAHBfbm9kZXNfbmVlZGVkcQVdcQYoWAUAAABQMTA4MnEHWAUAAABQMTQ0OXEIWAUAAABQMTQ1MXEJWAUAAABQMTU0OXEKWAUAAABQMTcwNXELWAUAAABQMTgxM3EMWAUAAABQMjA0NHENWAUAAABQMjA0NnEOWAUAAABQMjkyN3EPWAQAAABQNTcxcRBYBQAAAFA2NTkxcRFlWBkAAAB0YXJnZXRfcV9ub2RlX2NvbHVtbl9uYW1lcRJYDgAAAFN0YXRlX3dpa2lkYXRhcRN1WAoAAABxdWVyeV9qc29ucRROWAsAAABzZWFyY2hfdHlwZXEVWAgAAAB3aWtpZGF0YXEWdWIucQAu"
                    }
                },
                "augment_columns":{
                    "type":"VALUE",
                    "data":{
                        "encoding":"pickle",
                        "value":"gANjY29weXJlZwpfcmVjb25zdHJ1Y3RvcgpxAGNkM20uY29udGFpbmVyLmxpc3QKTGlzdApxAWNidWlsdGlucwpsaXN0CnECXXEDh3EEUnEFfXEGWAgAAABtZXRhZGF0YXEHY2QzbS5tZXRhZGF0YS5iYXNlCkRhdGFNZXRhZGF0YQpxCCmBcQl9cQooWBEAAABfY3VycmVudF9tZXRhZGF0YXELY2QzbS5tZXRhZGF0YS5iYXNlCk1ldGFkYXRhRW50cnkKcQwpgXENTn1xDihYCAAAAGVsZW1lbnRzcQ9jZDNtLnV0aWxzCnBtYXAKcRB9cRGFcRJScRNYDAAAAGFsbF9lbGVtZW50c3EUTlgIAAAAbWV0YWRhdGFxFWNmcm96ZW5kaWN0CkZyb3plbk9yZGVyZWREaWN0CnEWKYFxF31xGChYBQAAAF9kaWN0cRljY29sbGVjdGlvbnMKT3JkZXJlZERpY3QKcRopUnEbWAUAAABfaGFzaHEcTnViWAgAAABpc19lbXB0eXEdiFgRAAAAaXNfZWxlbWVudHNfZW1wdHlxHoh1hnEfYmgcTnVic2Iu"
                    }
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"fe0f1ac8-1d39-463a-b344-7bd498a31b91",
                "version":"0.1",
                "python_path":"d3m.primitives.data_augmentation.datamart_augment.Common",
                "name":"Perform augmentation using Datamart",
                "digest":"1e8095ddbb0dc62e697cdbef430fe59b121cbca394c2e529ec647ceee742e603"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.2.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "search_result":{
                    "type":"VALUE",
                    "data":{
                        "encoding":"pickle",
                        "value":"gAND94ADY2RhdGFtYXJ0X2lzaS5lbnRyaWVzCkRhdGFtYXJ0U2VhcmNoUmVzdWx0CnEAKYFxAX1xAihYDQAAAHNlYXJjaF9yZXN1bHRxA31xBChYDgAAAHBfbm9kZXNfbmVlZGVkcQVdcQYoWAUAAABQMTA4MnEHWAUAAABQMjA0NnEIWAQAAABQNTcxcQllWBkAAAB0YXJnZXRfcV9ub2RlX2NvbHVtbl9uYW1lcQpYDQAAAEZJUFNfd2lraWRhdGFxC3VYCgAAAHF1ZXJ5X2pzb25xDE5YCwAAAHNlYXJjaF90eXBlcQ1YCAAAAHdpa2lkYXRhcQ51Yi5xAC4="
                    }
                },
                "augment_columns":{
                    "type":"VALUE",
                    "data":{
                        "encoding":"pickle",
                        "value":"gANjY29weXJlZwpfcmVjb25zdHJ1Y3RvcgpxAGNkM20uY29udGFpbmVyLmxpc3QKTGlzdApxAWNidWlsdGlucwpsaXN0CnECXXEDh3EEUnEFfXEGWAgAAABtZXRhZGF0YXEHY2QzbS5tZXRhZGF0YS5iYXNlCkRhdGFNZXRhZGF0YQpxCCmBcQl9cQooWBEAAABfY3VycmVudF9tZXRhZGF0YXELY2QzbS5tZXRhZGF0YS5iYXNlCk1ldGFkYXRhRW50cnkKcQwpgXENTn1xDihYCAAAAGVsZW1lbnRzcQ9jZDNtLnV0aWxzCnBtYXAKcRB9cRGFcRJScRNYDAAAAGFsbF9lbGVtZW50c3EUTlgIAAAAbWV0YWRhdGFxFWNmcm96ZW5kaWN0CkZyb3plbk9yZGVyZWREaWN0CnEWKYFxF31xGChYBQAAAF9kaWN0cRljY29sbGVjdGlvbnMKT3JkZXJlZERpY3QKcRopUnEbWAUAAABfaGFzaHEcTnViWAgAAABpc19lbXB0eXEdiFgRAAAAaXNfZWxlbWVudHNfZW1wdHlxHoh1hnEfYmgcTnVic2Iu"
                    }
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version":"0.3.0",
                "python_path":"d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name":"Extract a DataFrame from a Dataset",
                "digest":"9935952c663b051a9a5bf25045adb3ce7803b724f8397306dabd458a3350627d"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.3.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version":"0.2.0",
                "python_path":"d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                "name":"Extracts columns by semantic type",
                "digest":"9111567d84de0ffe913eee93395a4a3f1eceb2d8db600b39523257297f09a181"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.4.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "semantic_types":{
                    "type":"VALUE",
                    "data":[
                        "https://metadata.datadrivendiscovery.org/types/PrimaryKey",
                        "https://metadata.datadrivendiscovery.org/types/Attribute"
                    ]
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"b2612849-39e4-33ce-bfda-24f3e2cb1e93",
                "version":"1.5.1",
                "python_path":"d3m.primitives.schema_discovery.profiler.DSBOX",
                "name":"DSBox Profiler",
                "digest":"950f55f89b28a1ed2381e15f92953c720a501e3dd8c0ac3a7bfecd31104c5320"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.5.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"dsbox-cleaning-featurizer",
                "version":"1.5.1",
                "python_path":"d3m.primitives.data_cleaning.cleaning_featurizer.DSBOX",
                "name":"DSBox Cleaning Featurizer",
                "digest":"9260b4340901c2836e7aef0ae239d1a56c3f3e1c86af7becc1fa7dca5e1cff27"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.6.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"18f0bb42-6350-3753-8f2d-d1c3da70f279",
                "version":"1.5.1",
                "python_path":"d3m.primitives.data_preprocessing.encoder.DSBOX",
                "name":"ISI DSBox Data Encoder",
                "digest":"5fd93e16bb6e37d183fd45d5198f6110e8ea2e4601abd4ae04df637c9da710e0"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.7.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"7ddf2fd8-2f7f-4e53-96a7-0d9f5aeecf93",
                "version":"1.5.1",
                "python_path":"d3m.primitives.data_transformation.to_numeric.DSBOX",
                "name":"ISI DSBox To Numeric DataFrame",
                "digest":"cfb93d00a4a20cbc4830f0c344a6e1732577ad392f05c8f8f4bfdfb73e257c9c"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.8.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"7894b699-61e9-3a50-ac9f-9bc510466667",
                "version":"1.5.1",
                "python_path":"d3m.primitives.data_preprocessing.mean_imputation.DSBOX",
                "name":"DSBox Mean Imputer",
                "digest":"c656d5b4c65556c9ccbf8163c9d4826c5267a2cc11d9e5f0c771598a88c53b8b"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.9.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"dsbox-multi-table-feature-scaler",
                "version":"1.5.1",
                "python_path":"d3m.primitives.normalization.iqr_scaler.DSBOX",
                "name":"DSBox feature scaler",
                "digest":"75db81824eae7553747b145f4f161be8723fa88de1e1422d40ab9681404bc481"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.10.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"2fb28cd1-5de6-3663-a2dc-09c786fba7f4",
                "version":"2019.4.4",
                "python_path":"d3m.primitives.feature_extraction.pca.SKlearn",
                "name":"sklearn.decomposition.pca.PCA",
                "digest":"f70a569f2d01af7ea18208f91d204727839630dd7e5667e29ec8ed53760c9529"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.11.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "use_semantic_types":{
                    "type":"VALUE",
                    "data":true
                },
                "add_index_columns":{
                    "type":"VALUE",
                    "data":true
                },
                "return_result":{
                    "type":"VALUE",
                    "data":"new"
                },
                "n_components":{
                    "type":"VALUE",
                    "data":{
                        "case":"int",
                        "value":10
                    }
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version":"0.2.0",
                "python_path":"d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                "name":"Extracts columns by semantic type",
                "digest":"9111567d84de0ffe913eee93395a4a3f1eceb2d8db600b39523257297f09a181"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.4.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "semantic_types":{
                    "type":"VALUE",
                    "data":[
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ]
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"7ddf2fd8-2f7f-4e53-96a7-0d9f5aeecf93",
                "version":"1.5.1",
                "python_path":"d3m.primitives.data_transformation.to_numeric.DSBOX",
                "name":"ISI DSBox To Numeric DataFrame",
                "digest":"cfb93d00a4a20cbc4830f0c344a6e1732577ad392f05c8f8f4bfdfb73e257c9c"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.13.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "drop_non_numeric_columns":{
                    "type":"VALUE",
                    "data":false
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"2a031907-6b2c-3390-b365-921f89c8816a",
                "version":"2019.4.4",
                "python_path":"d3m.primitives.regression.gradient_boosting.SKlearn",
                "name":"sklearn.ensemble.gradient_boosting.GradientBoostingRegressor",
                "digest":"d36cdae9f9b5123ad52c3e292061477cf9edcc1124731799cb45ad99c63e209d"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.12.produce"
                },
                "outputs":{
                    "type":"CONTAINER",
                    "data":"steps.14.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "max_depth":{
                    "type":"VALUE",
                    "data":2
                },
                "n_estimators":{
                    "type":"VALUE",
                    "data":165
                },
                "learning_rate":{
                    "type":"VALUE",
                    "data":0.23
                },
                "min_samples_split":{
                    "type":"VALUE",
                    "data":{
                        "case":"int",
                        "value":2
                    }
                },
                "min_samples_leaf":{
                    "type":"VALUE",
                    "data":{
                        "case":"absolute",
                        "value":2
                    }
                },
                "add_index_columns":{
                    "type":"VALUE",
                    "data":true
                },
                "use_semantic_types":{
                    "type":"VALUE",
                    "data":true
                }
            }
        }
    ],
    "name":"default_regression_template:5111834088",
    "description":"",
    "digest":"41fde26970e827605d8331e0fce136383840b80896d370f0e98db5ae6ba76f4f",
    "pipeline_rank":1517.8920452603106,
    "metric":"meanAbsoluteError",
    "metric_value":1517.8920452603106,
    "template_name":"default_regression_template",
    "template_task":"REGRESSION",
    "template_subtask":"{'NONE', 'MULTIVARIATE', 'UNIVARIATE'}",
    "problem_taskType":"regression",
    "problem_taskSubType":"NONE"
}
